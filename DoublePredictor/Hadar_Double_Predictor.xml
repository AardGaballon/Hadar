<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Wednesday, September 14, 2016, 12:00 PM -->
<!-- MuClient version 5.01 -->

<!-- Plugin "Hadar_Double_Predictor" generated by Plugin Wizard -->

<muclient>
<plugin
   name="Hadar_Double_Predictor"
   author="Hadar"
   id="dbcf98147af347b80d74fc70"
   language="Lua"
   purpose="predict double via a command"
   date_written="2016-09-14 11:59:02"
   requires="4.00"
   version="1.0"
   >
<description trim="y">
<![CDATA[
Just use the command predict to take a guess at the next hour of double
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   match="^Mob Deaths\s+:\s+([+-]?[0-9,]+)\s+([+-]?[0-9,]+)$"
   regexp="y"
   send_to="12"
   script="MobMath"
   sequence="100"
  >
  <send></send>
  </trigger>
  <trigger
   enabled="y"
   match="^ \* The system time is\s+: (\d+):(\d+):(\d+) - \w+ (\d+) (\w+), (\d+)"
   regexp="y"
   send_to="12"
   script="LetItGo"
   sequence="100"
  >
  <send></send>
  </trigger>
  <trigger
   enabled="y"
   match="^ \* Aardwolf last restarted on \: (\d+)\:(\d+)\:(\d+) \- \w+ (\d+) (\w+)\, (\d+)"
   regexp="y"
   send_to="12"
   script="GetTheDate"
   sequence="100"
  >
  <send>
</send>
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   match="predict *"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>HadarDouble={}

HadarDouble.Player='%1'
HadarDouble.VI="no"
Send("gamestat 5")
Send("realtime")</send>
  </alias>
  
  <alias match="^(?:had|double) help$"
	enabled="y"
	sequence="100"
	send_to="12"
	regexp="y"
	keep_evaluating="y"
	>
	<send>
		HadarHelp()
	</send>
	</alias>
</aliases>


<script>
<![CDATA[
dofile (GetPluginInfo (GetPluginID (), 20) .. "luapath.lua")
require "HadarLuaCommon"

function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end

function MobMath(name, line, wildcards)
HadarDouble.KillsSinceReboot = string.gsub(wildcards[1],",","")
HadarDouble.KillsSinceTracked = string.gsub(wildcards[2],",","")
local number = HadarDouble.KillsSinceTracked/1000000
local doubround = math.floor(number)
HadarDouble.ThisMillion = doubround*1000000
HadarDouble.NextMillion = HadarDouble.ThisMillion+1000000
HadarDouble.KillsNeeded = HadarDouble.NextMillion-HadarDouble.KillsSinceTracked
HadarDouble.KillsCompleted = HadarDouble.KillsSinceTracked-HadarDouble.ThisMillion
end

function GetTheDate(name, line, wildcards)
local month=wildcards[5]
local DoubleAardRebootMonth

if month=="Jan" then DoubleAardRebootMonth=1 end
if month=="Feb" then DoubleAardRebootMonth=2 end
if month=="Mar" then DoubleAardRebootMonth=3 end
if month=="Apr" then DoubleAardRebootMonth=4 end
if month=="May" then DoubleAardRebootMonth=5 end
if month=="Jun" then DoubleAardRebootMonth=6 end
if month=="Jul" then DoubleAardRebootMonth=7 end
if month=="Aug" then DoubleAardRebootMonth=8 end
if month=="Sep" then DoubleAardRebootMonth=9 end
if month=="Oct" then DoubleAardRebootMonth=10 end
if month=="Nov" then DoubleAardRebootMonth=11 end
if month=="Dec" then DoubleAardRebootMonth=12 end

local t1 = os.time{year=wildcards[6], month=DoubleAardRebootMonth, day=wildcards[4],hour=wildcards[1],minute=wildcards[2],second=wildcards[3]}
local changetime = os.time()+10800
local timemin = (changetime-t1)/60
local totalmin = round(timemin)

HadarDouble.TotalMin=totalmin
end

function LetItGo(name, line, wildcards)
if HadarDouble.TotalMin<=0 then
HadarDouble.MobsKilledPerMinute=200
else
HadarDouble.MobsKilledPerMinute=math.floor(HadarDouble.KillsSinceReboot/HadarDouble.TotalMin)
end


HadarDouble.MinutesLeft=math.floor(HadarDouble.KillsNeeded/HadarDouble.MobsKilledPerMinute)
HadarDouble.DaysLeft=math.floor(HadarDouble.MinutesLeft/1440)
HadarDouble.LeftoverMinutes=HadarDouble.MinutesLeft - (HadarDouble.DaysLeft*1440)
HadarDouble.HoursLeft=math.floor(HadarDouble.LeftoverMinutes/60)
local quickmath = HadarDouble.HoursLeft*60
HadarDouble.MinutesLeft=HadarDouble.LeftoverMinutes-quickmath

SendSpecial(HadarDouble.Player.." @G\\}@R "..HadarDouble.KillsNeeded.."@w Kills Left @G{/ @w(Avg @R"..HadarDouble.MobsKilledPerMinute.." @wkpm) @G\\}@w Hour of Double in about: @R"..HadarDouble.DaysLeft.."@wd @R"..HadarDouble.HoursLeft.."@wh @R"..HadarDouble.MinutesLeft.."@wm @G{/@w")
end




function HadarHelp()
	ColourNote("#159FE5","","+---------------------------------","Green","","[","Cyan","","D","Teal","","ouble ","Cyan","","P","Teal","","redictor","Green","","]","#159FE5","","---------------------------------+")
	ColourNote("#159FE5","","|"..string.format("%84s"," ").."|")
	ColourNote("#159FE5","","|","#E55B15","",string.format("%-19s"," Predict <Channel>"),"#159FE5","","-","#F1D566","",string.format("%-64s"," Outputs an estimate to a channel when double might happen"),"#159FE5","","|")
	ColourNote("#159FE5","","|"..string.format("%84s"," ").."|")
	ColourNote("#159FE5","","+"..string.rep("-",84).."+")
end


]]>
</script> 

</muclient>
